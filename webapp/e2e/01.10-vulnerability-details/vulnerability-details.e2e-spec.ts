/*
 *Copyright 2018 T Mobile, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); You may not use
 * this file except in compliance with the License. A copy of the License is located at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or
 * implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */

// import { browser, protractor } from 'protractor';
// import { OverviewCompliance } from '../page-objects/overview.po';
// import { VulnerabilityCompliance } from '../page-objects/vulnerability-compliance.po';
// import { AllVulnerabilities } from '../page-objects/all-vulnerabilities.po';
// import { VulnerabilityDetails } from '../page-objects/vulnerability-details.po';

// const timeOutHigh = 180000;

// describe('VulnerabilityDetails', () => {
//   let OverviewCompliance_po: OverviewCompliance;
//   let vulnerabilityDetails_po: VulnerabilityDetails;
//   let VulnerabilityCompliance_po: VulnerabilityCompliance;
//   let AllVulnerabilities_po: AllVulnerabilities;
//   const EC = protractor.ExpectedConditions;

//   beforeAll(() => {
//     OverviewCompliance_po = new OverviewCompliance();
//     vulnerabilityDetails_po = new VulnerabilityDetails();
//     AllVulnerabilities_po = new AllVulnerabilities();
//     VulnerabilityCompliance_po = new VulnerabilityCompliance();
//   });

//   it('Check title of page', () => {
//     browser.wait(EC.visibilityOf( OverviewCompliance_po.getVulnerabilities()), timeOutHigh);
//     browser.wait(EC.elementToBeClickable( OverviewCompliance_po.getVulnerabilities()), timeOutHigh);
//     OverviewCompliance_po.getVulnerabilities().click();
//     browser.wait(EC.visibilityOf( VulnerabilityCompliance_po.getOverallVulnerabilities()), timeOutHigh);
//     browser.wait(EC.elementToBeClickable( VulnerabilityCompliance_po.getOverallVulnerabilities()), timeOutHigh);
//     VulnerabilityCompliance_po.getOverallVulnerabilities().click();
//     browser.wait(EC.visibilityOf( AllVulnerabilities_po.getPolicyTitle()), timeOutHigh);
//     browser.wait(EC.elementToBeClickable( AllVulnerabilities_po.getPolicyTitle()), timeOutHigh);
//     AllVulnerabilities_po.getPolicyTitle().click();
//     browser.wait(EC.visibilityOf( vulnerabilityDetails_po.getPageTitle()), timeOutHigh);
//     expect(vulnerabilityDetails_po.getPageTitle().getText()).toEqual('Vulnerability Details');
//   });

//   it('Check redirect to all vulnerabilities on bread crumb click', () => {
//     browser.wait(EC.visibilityOf( vulnerabilityDetails_po.getVulnListBreadCrumb()), timeOutHigh);
//     browser.wait(EC.elementToBeClickable( vulnerabilityDetails_po.getVulnListBreadCrumb()), timeOutHigh);
//     vulnerabilityDetails_po.getVulnListBreadCrumb().click();
//     browser.wait(EC.visibilityOf( AllVulnerabilities_po.getAllVulHeaderText()), timeOutHigh);
//     expect(AllVulnerabilities_po.getAllVulHeaderText().getText()).toEqual('All Vulnerabilities');
//   });

// });
